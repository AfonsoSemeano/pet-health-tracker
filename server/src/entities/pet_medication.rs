//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "pet_medication")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub medication_id: i32,
    pub medication_type_id: i32,
    pub name: String,
    pub next_medication_date: Option<Date>,
    pub frequency_interval: Option<i32>,
    pub frequency_unit: Option<String>,
    pub pet_id: i32,
    pub timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::medication_type::Entity",
        from = "Column::MedicationTypeId",
        to = "super::medication_type::Column::MedicationTypeId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    MedicationType,
    #[sea_orm(
        belongs_to = "super::pet::Entity",
        from = "Column::PetId",
        to = "super::pet::Column::PetId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Pet,
}

impl Related<super::medication_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MedicationType.def()
    }
}

impl Related<super::pet::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Pet.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
