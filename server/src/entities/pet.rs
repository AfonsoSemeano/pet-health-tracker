//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "pet")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub pet_id: i32,
    pub name: String,
    pub size: Option<String>,
    pub birthday: Option<Date>,
    #[sea_orm(column_type = "Double", nullable)]
    pub weight: Option<f64>,
    pub timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::pet_medication::Entity")]
    PetMedication,
    #[sea_orm(has_many = "super::pet_photo::Entity")]
    PetPhoto,
}

impl Related<super::pet_medication::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PetMedication.def()
    }
}

impl Related<super::pet_photo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PetPhoto.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
